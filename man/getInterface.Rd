% Generated by roxygen2 (4.1.1): do not edit by hand
% Please edit documentation in R/Interface.R
\name{evaluatorNumber}
\alias{evaluatorNumber}
\alias{getInterface}
\alias{rmInterface}
\title{Get or start an evaluator for an interface}
\usage{
evaluatorNumber(ev)

getInterface(Class, ..., .makeNew = NA, .select = NULL)

rmInterface(evaluator)
}
\arguments{
\item{Class}{the name of the interface class for this evaluator; by default, the class of the
current evaluator. Can also be the class definition object.}

\item{...}{arguments, if any, are passed to the generator for the evaluator}

\item{makeNew}{can be used to force or prevent starting a new evaluator, if passed as
a logical value.  Can also be passed as a function that tests the suitability of a
current evaluator, returning TRUE if this one won't do, and a new one should be
generated instead (consistent with the ... arguments, presumably).

The default is NA, meaning that an existing evaluator is OK, but one should be generated
if none exists.  In contrast, FALSE means to return NULL if no matching evaluator exists.}
}
\value{
\code{getInterface()} returns an  interface evaluator for this class, starting one if none exists.
}
\description{
Get or start an evaluator for an interface
}
\details{
Specific language interface packages usually supply a convenience function equivalent
to calling \code{getInterface()} for their class; e.g., \code{RPython()} in \code{'XRPython'}

If no \code{Class} is given, the current (i.e., last active) evaluator is returned
}
\section{Functions}{
\itemize{
\item \code{evaluatorNumber}: Return the sequential number for this evalutor; used in \code{ProxyName()} method.

\item \code{rmInterface}: Remove an the specified  evaluator from the table of available interfaces.
}}

